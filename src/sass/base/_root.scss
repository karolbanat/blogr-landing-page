@use './variables';
@use './mixins';

:root {
	// colors
	@each $color, $shades in variables.$colors {
		@each $shade, $value in $shades {
			--clr-#{$color}-#{$shade}: #{$value};
		}
	}

	// font families
	--ff-primary: 'Overpass', sans-serif;
	--ff-secondary: 'Ubuntu', sans-serif;

	// font wieghts
	@each $font-weight, $value in variables.$font-weights {
		--fw-#{$font-weight}: #{$value};
	}

	// font sizes
	@each $screen, $sizes in variables.$font-sizes {
		@if $screen == small {
			@each $size, $value in $sizes {
				--fz-#{$size}: #{$value};
			}
		} @else {
			@include mixins.mq($screen) {
				@each $size, $value in $sizes {
					--fz-#{$size}: #{$value};
				}
			}
		}
	}

	// font size exceptions
	--fz-dropdown-link: var(--fz-400);
	--fz-header-text: var(--fz-500);
	--fz-section-heading-sm: var(--fz-600);
	--fz-footer: var(--fz-500);

	@include mixins.mq(medium) {
		--fz-dropdown-link: 1.5rem;
		--fz-header-text: 2rem;
		--fz-section-heading-sm: 2.8rem;
		--fz-footer: 1.5rem;
	}

	// border radius
	@each $radius, $value in variables.$border-radius {
		--borr-#{$radius}: #{$value};
	}

	// spacings
	@each $unit, $sizes in variables.$spacings {
		@each $size, $value in $sizes {
			--spacing-#{$unit}-#{$size}: #{$value};
		}
	}
}
